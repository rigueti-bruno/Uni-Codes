# definimos os períodos de treino e validação
fit <- ses(treino, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(treino,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h = 1, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(validacao, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(validacao, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=6)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(validacao, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=2)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(validacao, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(validacao, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=1)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(validacao, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=10)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(validacao, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(serie, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
fit <- ses(treino, h = 12, alpha = 0.8)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h = 12)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h = 12)
summary(fit)
summary(fit)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h = 12)
summary(fit)
fit <- ses(treino, h = 12)
fit <- ses(treino, h=12)
summary(fit)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h=12, alpha = 0.8)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h=12, alpha = 0.8)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h=12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
summary(fit)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h=12)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h=12)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
summary(fit)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h=12)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
summary(fit)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h=12)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
summary(fit)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h=12)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
summary(fit)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
install.packages(c("backports", "cachem", "DBI", "farver", "fastmap", "highr", "httpgd", "knitr", "markdown", "odbc", "RcppArmadillo", "rlang", "rmarkdown", "systemfonts", "tseries", "unigd", "urca", "xfun", "xts"))
install.packages("ggplot2")
install.packages("plotly")
install.packages("dashboardthemes")
# Carregando a biblioteca Forecast:
library(forecast)
# Dê um Ctrl + no Excel para copiar a série para a área de transferência:
dados <- read.table(\"clipboard\")
serie <- ts(dados,start=c(1999,12),end=c(2020,7),frequency=12)
# Definindo os períodos de Treino e Validação:
treino <- window(serie,end=c(2019,12))
validacao <- window(serie,start=c(2020,1))
# Aplicando o Metodo de Holt para obter previsões para até 7 passos à frente:
fit <- holt(treino,h=7)
# Exibe as Contantes de Amortecimento Estimadas e as Previsões correspondentes:
summary(fit)
# Carregando a biblioteca Forecast:
library(forecast)
# Dê um Ctrl + no Excel para copiar a série para a área de transferência:
dados <- read.table(\"clipboard\")
serie <- ts(dados,start=c(1999,12),end=c(2020,7),frequency=12)
# Definindo os períodos de Treino e Validação:
treino <- window(serie,end=c(2019,12))
validacao <- window(serie,start=c(2020,1))
# Aplicando o Metodo de Holt para obter previsões para até 7 passos à frente:
fit <- holt(treino,h=7)
# Exibe as Contantes de Amortecimento Estimadas e as Previsões correspondentes:
summary(fit)
summary(fit)
library(forecast)
dados <- read.table(\"clipboard\")
library(forecast)
library(forecast)
dados <- read.table(\"clipboard\")
serie <- ts(dados,start=c(1999,12),end=c(2020,7),frequency=12)
treino <- window(serie,end=c(2019,12))
validacao <- window(serie,start=c(2020,1))
fit <- holt(treino,h=7)
summary(fit)
# Carregando a Biblioteca Forecast:
library(forecast)
# Carregando os dados:
dados <- read.table("clipboard")
# Carregando a Biblioteca Forecast:
library(forecast)
# Carregando os dados:
dados <- read.table("clipboard")
serie <- ts(dados,start=c(1999,12),end=c(2020,7),frequency=12)
# Definindo os periodos de treino e validação:
treino <- window(serie,end=c(2019,12))
validacao <- window(serie,start=c(2020,1))
# Aplicando o Metodo de Holt para obter previsões para até 7 passos à frente:
fit <- holt(treino,h=7)
# Carregando a Biblioteca Forecast:
library(forecast)
# Carregando os dados:
dados <- read.table("clipboard")
serie <- ts(dados,start=c(1999,12),end=c(2020,7),frequency=12)
# Definindo os periodos de treino e validação:
treino <- window(serie,end=c(2019,12))
validacao <- window(serie,start=c(2020,1))
# Aplicando o Metodo de Holt para obter previsões para até 7 passos à frente:
fit <- holt(treino,h=7)
# Exibir as Constantes de Amortecimento Estimadas e as Previsões:
summary(fit)
# Carregando a Biblioteca Forecast:
library(forecast)
# Carregando os dados:
dados <- read.table("clipboard")
serie <- ts(dados,start=c(1999,12),end=c(2020,7),frequency=12)
# Definindo os periodos de treino e validação:
treino <- window(serie,end=c(2019,12))
validacao <- window(serie,start=c(2020,1))
# Aplicando o Metodo de Holt para obter previsões para até 7 passos à frente:
fit <- holt(treino,h=7)
# Exibir as Constantes de Amortecimento Estimadas e as Previsões:
summary(fit)
# Plota as previsões com intervalos de confiança de 80% e 95%:
plot(fit,main="Previsões x Valores Observados nos Últimos 7 meses")
lines(validacao,kty=3)
# Carregando a Biblioteca Forecast:
library(forecast)
# Carregando os dados:
dados <- read.table("clipboard")
serie <- ts(dados,start=c(1999,12),end=c(2020,7),frequency=12)
# Definindo os periodos de treino e validação:
treino <- window(serie,end=c(2019,12))
validacao <- window(serie,start=c(2020,1))
# Aplicando o Metodo de Holt para obter previsões para até 7 passos à frente:
fit <- holt(treino,h=7)
# Exibir as Constantes de Amortecimento Estimadas e as Previsões:
summary(fit)
# Plota as previsões com intervalos de confiança de 80% e 95%:
plot(fit,main="Previsões x Valores Observados nos Últimos 7 meses")
lines(validacao,lty=3)
# Carregando a Biblioteca Forecast:
library(forecast)
# Carregando os dados:
dados <- read.table("clipboard")
serie <- ts(dados,start=c(1999,12),end=c(2020,7),frequency=12)
# Definindo os periodos de treino e validação:
treino <- window(serie,end=c(2019,12))
validacao <- window(serie,start=c(2020,1))
# Aplicando o Metodo de Holt para obter previsões para até 7 passos à frente:
fit <- holt(treino,h=7)
# Exibir as Constantes de Amortecimento Estimadas e as Previsões:
summary(fit)
# Plota as previsões com intervalos de confiança de 80% e 95%:
plot(fit,main="Previsões x Valores Observados nos Últimos 7 meses")
lines(validacao,lty=3)
# Carregando a Biblioteca Forecast:
library(forecast)
# Carregando os dados:
dados <- read.table("clipboard")
serie <- ts(dados,start=c(1999,12),end=c(2020,7),frequency=12)
# Definindo os periodos de treino e validação:
treino <- window(serie,end=c(2019,12))
validacao <- window(serie,start=c(2020,1))
# Aplicando o Metodo de Holt para obter previsões para até 7 passos à frente:
fit <- hw(treino,h=7)
# Exibir as Constantes de Amortecimento Estimadas e as Previsões:
summary(fit)
# Plota as previsões com intervalos de confiança de 80% e 95%:
plot(fit,main="Previsões x Valores Observados nos Últimos 7 meses")
lines(validacao,lty=3)
# Carregando a Biblioteca Forecast:
library(forecast)
# Carregando os dados:
dados <- read.table("clipboard")
serie <- ts(dados,start=c(2000,1),end=c(2019,12),frequency=12)
# Definindo os periodos de treino e validação:
treino <- window(serie,end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# Aplicando o Metodo de Holt para obter previsões para até 7 passos à frente:
fit <- hw(treino,h=12)
# Exibir as Constantes de Amortecimento Estimadas e as Previsões:
summary(fit)
# Plota as previsões com intervalos de confiança de 80% e 95%:
plot(fit,main="Previsões x Valores Observados nos Últimos 7 meses")
lines(validacao,lty=3)
# Carregando a Biblioteca Forecast:
library(forecast)
# Carregando os dados:
dados <- read.table("clipboard")
serie <- ts(dados,start=c(2000,1),end=c(2019,12),frequency=12)
# Definindo os periodos de treino e validação:
treino <- window(serie,end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# Aplicando o Metodo de Holt para obter previsões para até 7 passos à frente:
fit <- hw(treino,h=12,seasonal = "multiplicative")
# Exibir as Constantes de Amortecimento Estimadas e as Previsões:
summary(fit)
# Plota as previsões com intervalos de confiança de 80% e 95%:
plot(fit,main="Previsões x Valores Observados nos Últimos 7 meses")
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h=1)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
summary(fit)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h=12)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
summary(fit)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
install.packages(c("bit", "bit64", "caret", "clock", "cpp11", "curl", "data.table", "evaluate", "fontawesome", "fs", "future.apply", "gert", "gower", "gtable", "httr2", "knitr", "later", "lava", "lubridate", "openssl", "parallelly", "pillar", "pkgbuild", "processx", "progressr", "promises", "ps", "R.oo", "Rcpp", "RcppArmadillo", "renv", "rlang", "rmarkdown", "rstudioapi", "shiny", "systemfonts", "testthat", "textshaping", "tinytex", "usethis", "waldo", "withr", "xfun", "xts"))
install.packages(c("sampling", "survey"))
demo(graphics)
setwd("G:/Meu Drive/01 - Faculdade de Ciência de Dados/Uni-DS-Codes/Periodo 3/Estatítica Experimental e Amostragem/Tema 5 - Amostragem na Prática com a Utilização do Software R - Códigos")
sample(1:6,10,replace = TRUE)
sample(1:9780,2,replace = FALSE)
sample(1:9780,2,replace = FALSE)
sample(1:9780,2,replace = FALSE)
set.seed(5)
sample(1:9780,2,replace = FALSE)
set.seed(5)
sample(1:9780,2,replace = FALSE)
set.seed(5)
sample(1:9780,2,replace = FALSE)
set.seed(5)
sample(1:9780,2,replace = FALSE)
set.seed(5)
sample(1:9780,2,replace = FALSE)
s
library(sampling)
set.seed(9)
s = srswr(20,100)
s
library(sampling)
set.seed(9)
s = srswr(20,100)
s
library(sampling)
set.seed(9)
s = srswr(20,100)
s
(1:100)[s!=0]
library(sampling)
set.seed(9)
s = srswr(20,100)
s
(1:100)[s!=0]
(1:100)[s==2]
library(sampling)
set.seed(10)
s = srswor(20,100)
(1:100)[s!=0]
data()
data(MU284)
fix(MU284)
data(MU284)
fix(MU284)
data(MU284)
#fix(MU284)
N = nrow(MU284)
N
data(MU284)
#fix(MU284) - exibe o dataset inteiro
N = nrow(MU284) # calcula o tamanho da população
n = 80 # define o tamanho da amostra
set.seed(8)
selec = sample(1:N,n) # calcula as unidades da amostra
amostra = MU284[selec,] #extrai a amostra do dataset
amostra # exibe a amostra
