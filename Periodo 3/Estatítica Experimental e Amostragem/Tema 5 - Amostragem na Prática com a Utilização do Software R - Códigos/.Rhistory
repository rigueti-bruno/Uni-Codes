# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(treino,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h = 1, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(validacao, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(validacao, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=6)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(validacao, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=2)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(validacao, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(validacao, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=1)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(validacao, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=10)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(validacao, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(serie, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
fit <- ses(treino, h = 12, alpha = 0.8)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h = 12)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h = 12)
summary(fit)
summary(fit)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h = 12)
summary(fit)
fit <- ses(treino, h = 12)
fit <- ses(treino, h=12)
summary(fit)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h=12, alpha = 0.8)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h=12, alpha = 0.8)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h=12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
summary(fit)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h=12)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h=12)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
summary(fit)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h=12)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
summary(fit)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h=12)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
summary(fit)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h = 12, alpha = 0.8)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h=12)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
summary(fit)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
install.packages(c("backports", "cachem", "DBI", "farver", "fastmap", "highr", "httpgd", "knitr", "markdown", "odbc", "RcppArmadillo", "rlang", "rmarkdown", "systemfonts", "tseries", "unigd", "urca", "xfun", "xts"))
install.packages("ggplot2")
install.packages("plotly")
install.packages("dashboardthemes")
# Carregando a biblioteca Forecast:
library(forecast)
# Dê um Ctrl + no Excel para copiar a série para a área de transferência:
dados <- read.table(\"clipboard\")
serie <- ts(dados,start=c(1999,12),end=c(2020,7),frequency=12)
# Definindo os períodos de Treino e Validação:
treino <- window(serie,end=c(2019,12))
validacao <- window(serie,start=c(2020,1))
# Aplicando o Metodo de Holt para obter previsões para até 7 passos à frente:
fit <- holt(treino,h=7)
# Exibe as Contantes de Amortecimento Estimadas e as Previsões correspondentes:
summary(fit)
# Carregando a biblioteca Forecast:
library(forecast)
# Dê um Ctrl + no Excel para copiar a série para a área de transferência:
dados <- read.table(\"clipboard\")
serie <- ts(dados,start=c(1999,12),end=c(2020,7),frequency=12)
# Definindo os períodos de Treino e Validação:
treino <- window(serie,end=c(2019,12))
validacao <- window(serie,start=c(2020,1))
# Aplicando o Metodo de Holt para obter previsões para até 7 passos à frente:
fit <- holt(treino,h=7)
# Exibe as Contantes de Amortecimento Estimadas e as Previsões correspondentes:
summary(fit)
summary(fit)
library(forecast)
dados <- read.table(\"clipboard\")
library(forecast)
library(forecast)
dados <- read.table(\"clipboard\")
serie <- ts(dados,start=c(1999,12),end=c(2020,7),frequency=12)
treino <- window(serie,end=c(2019,12))
validacao <- window(serie,start=c(2020,1))
fit <- holt(treino,h=7)
summary(fit)
# Carregando a Biblioteca Forecast:
library(forecast)
# Carregando os dados:
dados <- read.table("clipboard")
# Carregando a Biblioteca Forecast:
library(forecast)
# Carregando os dados:
dados <- read.table("clipboard")
serie <- ts(dados,start=c(1999,12),end=c(2020,7),frequency=12)
# Definindo os periodos de treino e validação:
treino <- window(serie,end=c(2019,12))
validacao <- window(serie,start=c(2020,1))
# Aplicando o Metodo de Holt para obter previsões para até 7 passos à frente:
fit <- holt(treino,h=7)
# Carregando a Biblioteca Forecast:
library(forecast)
# Carregando os dados:
dados <- read.table("clipboard")
serie <- ts(dados,start=c(1999,12),end=c(2020,7),frequency=12)
# Definindo os periodos de treino e validação:
treino <- window(serie,end=c(2019,12))
validacao <- window(serie,start=c(2020,1))
# Aplicando o Metodo de Holt para obter previsões para até 7 passos à frente:
fit <- holt(treino,h=7)
# Exibir as Constantes de Amortecimento Estimadas e as Previsões:
summary(fit)
# Carregando a Biblioteca Forecast:
library(forecast)
# Carregando os dados:
dados <- read.table("clipboard")
serie <- ts(dados,start=c(1999,12),end=c(2020,7),frequency=12)
# Definindo os periodos de treino e validação:
treino <- window(serie,end=c(2019,12))
validacao <- window(serie,start=c(2020,1))
# Aplicando o Metodo de Holt para obter previsões para até 7 passos à frente:
fit <- holt(treino,h=7)
# Exibir as Constantes de Amortecimento Estimadas e as Previsões:
summary(fit)
# Plota as previsões com intervalos de confiança de 80% e 95%:
plot(fit,main="Previsões x Valores Observados nos Últimos 7 meses")
lines(validacao,kty=3)
# Carregando a Biblioteca Forecast:
library(forecast)
# Carregando os dados:
dados <- read.table("clipboard")
serie <- ts(dados,start=c(1999,12),end=c(2020,7),frequency=12)
# Definindo os periodos de treino e validação:
treino <- window(serie,end=c(2019,12))
validacao <- window(serie,start=c(2020,1))
# Aplicando o Metodo de Holt para obter previsões para até 7 passos à frente:
fit <- holt(treino,h=7)
# Exibir as Constantes de Amortecimento Estimadas e as Previsões:
summary(fit)
# Plota as previsões com intervalos de confiança de 80% e 95%:
plot(fit,main="Previsões x Valores Observados nos Últimos 7 meses")
lines(validacao,lty=3)
# Carregando a Biblioteca Forecast:
library(forecast)
# Carregando os dados:
dados <- read.table("clipboard")
serie <- ts(dados,start=c(1999,12),end=c(2020,7),frequency=12)
# Definindo os periodos de treino e validação:
treino <- window(serie,end=c(2019,12))
validacao <- window(serie,start=c(2020,1))
# Aplicando o Metodo de Holt para obter previsões para até 7 passos à frente:
fit <- holt(treino,h=7)
# Exibir as Constantes de Amortecimento Estimadas e as Previsões:
summary(fit)
# Plota as previsões com intervalos de confiança de 80% e 95%:
plot(fit,main="Previsões x Valores Observados nos Últimos 7 meses")
lines(validacao,lty=3)
# Carregando a Biblioteca Forecast:
library(forecast)
# Carregando os dados:
dados <- read.table("clipboard")
serie <- ts(dados,start=c(1999,12),end=c(2020,7),frequency=12)
# Definindo os periodos de treino e validação:
treino <- window(serie,end=c(2019,12))
validacao <- window(serie,start=c(2020,1))
# Aplicando o Metodo de Holt para obter previsões para até 7 passos à frente:
fit <- hw(treino,h=7)
# Exibir as Constantes de Amortecimento Estimadas e as Previsões:
summary(fit)
# Plota as previsões com intervalos de confiança de 80% e 95%:
plot(fit,main="Previsões x Valores Observados nos Últimos 7 meses")
lines(validacao,lty=3)
# Carregando a Biblioteca Forecast:
library(forecast)
# Carregando os dados:
dados <- read.table("clipboard")
serie <- ts(dados,start=c(2000,1),end=c(2019,12),frequency=12)
# Definindo os periodos de treino e validação:
treino <- window(serie,end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# Aplicando o Metodo de Holt para obter previsões para até 7 passos à frente:
fit <- hw(treino,h=12)
# Exibir as Constantes de Amortecimento Estimadas e as Previsões:
summary(fit)
# Plota as previsões com intervalos de confiança de 80% e 95%:
plot(fit,main="Previsões x Valores Observados nos Últimos 7 meses")
lines(validacao,lty=3)
# Carregando a Biblioteca Forecast:
library(forecast)
# Carregando os dados:
dados <- read.table("clipboard")
serie <- ts(dados,start=c(2000,1),end=c(2019,12),frequency=12)
# Definindo os periodos de treino e validação:
treino <- window(serie,end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# Aplicando o Metodo de Holt para obter previsões para até 7 passos à frente:
fit <- hw(treino,h=12,seasonal = "multiplicative")
# Exibir as Constantes de Amortecimento Estimadas e as Previsões:
summary(fit)
# Plota as previsões com intervalos de confiança de 80% e 95%:
plot(fit,main="Previsões x Valores Observados nos Últimos 7 meses")
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h=1)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
summary(fit)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(forecast)
dados <- read.table("clipboard")
serie <- ts(dados, start=c(2005,1), end=c(2019,12), frequency=12)
treino <- window(serie, end=c(2018,12))
validacao <- window(serie,start=c(2019,1))
# definimos os períodos de treino e validação
fit <- ses(treino, h=12)
# aplica o método para obter previsões para até 12 passos à frente (horizonte)
summary(fit)
plot(fit,main = "Previsões x Valores Observados nos Últimos 12 meses")
# plota as previsões com intervalos de confiança de 80% a 95%
lines(validacao,lty=3)
library(sampling)
data(MU284)
table(MU284$REG) # obtem uma tabela com os possiveis estratos
prop.table(table(MU284$REG)) # obtem o peso de cada estrato
np = 80 # tamanho da amostra planejado
np * prop.table(table(MU284$REG)) # alocação proporcional da amostra
# Selecionando a Amostra Estratificada:
set.seed(3)
selec = strata(MU284,stratanames = "REG",size=c(8,14,10,11,16,12,5,9),method = "srswor")
# Obtendo a Amostra da base de dados MU284:
amostra = getdata(MU284,selec)
# Criando o vetor fpc com os totais populacionais dos estratos:
fpc = rep(c(25,48,32,38,56,41,15,29),c(8,14,10,11,16,12,5,9))
# Especificação do Plano Amostral:
library(survey)
plano_est = svydesign(id=~1,strata=~Stratum,probs=~selec$Prob,data=amostra,fpc=~fpc)
# Estimação da Media Populacional e de seu Erro Padrão no Plano Estratificado:
svymean(~RMT85,plano_est)
library(sampling)
data(MU284)
table(MU284$REG) # obtem uma tabela com os possiveis estratos
prop.table(table(MU284$REG)) # obtem o peso de cada estrato
np = 50 # tamanho da amostra planejado
np * prop.table(table(MU284$REG)) # alocação proporcional da amostra
# Selecionando a Amostra Estratificada:
set.seed(3)
selec = strata(MU284,stratanames = "REG",size=c(8,14,10,11,16,12,5,9),method = "srswor")
setwd("G:/Meu Drive/01 - Faculdade de Ciência de Dados/Uni-DS-Codes/Periodo 3/Estatítica Experimental e Amostragem/Tema 5 - Amostragem na Prática com a Utilização do Software R - Códigos")
library(sampling)
data(MU284)
dados = MU284
table(MU284$Cl)
table(MU284$CL)
set.seed(5)
ACS=cluster(MU284,clustername = c("CL"),size = 14,method = c('srswor'))
ACS=cluster(MU284,clustername = c("CL"),size = 14,method = c('srswor'))
head(ACS,7)
head(ACS,10)
ACSs = getdata(MU284,ACS)
fix(ACSs)
fpc2 = rep(50,dim(ACSs)[1])
fpc2
library(survey)
PlanoC = svydesign(id=~CL,data=ACSs,probs=~ACS$Prob,fpc=~fpc2)
PlanoC
data(MU284)
dados = MU284
# Identificar os Clusters:
table(MU284$CL)
# Construir a Amostra por Conglomerados:
set.seed(5)
ACS=cluster(MU284,clustername = c("CL"),size = 14,method = c('srswor'))
